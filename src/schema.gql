# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthResponse {
  token: String!
  user: UserDto!
}

type BookDto {
  author: String!
  description: String
  id: Float!
  publicationYear: Float!
  title: String!
}

input CreateBookInput {
  author: String!
  description: String
  publicationYear: Int!
  title: String!
}

input GetBooksInput {
  author: String
  limit: Int
  offset: Int
  publicationYear: Int
  sortField: SortField
  sortOrder: SortOrder
  title: String
}

type GetBooksResponseDto {
  books: [BookDto!]!
  hasMore: Boolean!
}

input LoginAuthInput {
  email: String!
  password: String!
}

type Mutation {
  createBook(data: CreateBookInput!): BookDto!
  deleteBook(id: Float!): String!
  login(data: LoginAuthInput!): AuthResponse!
  registerUser(data: RegisterUserInput!): AuthResponse!
  updateBook(data: UpdateBookInput!): BookDto!
}

type Query {
  getBooks(filters: GetBooksInput): GetBooksResponseDto!
  sayHello: String!
}

input RegisterUserInput {
  email: String!
  password: String!
  username: String!
}

"""Sorting field for queries"""
enum SortField {
  AUTHOR
  PUBLICATION_YEAR
  TITLE
}

"""Sorting order for queries"""
enum SortOrder {
  ASC
  DESC
}

input UpdateBookInput {
  author: String
  description: String
  id: Int!
  publicationYear: Int
  title: String
}

type UserDto {
  email: String!
  id: Float!
  role: UserRole!
  username: String!
}

"""Defines the role of a user in the system"""
enum UserRole {
  ADMIN
  MODERATOR
  USER
}